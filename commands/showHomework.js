const { EmbedBuilder, AttachmentBuilder } = require("discord.js");
const { getHomeworkList } = require("../utils/homeworkManager");
const path = require("path");
const fs = require("fs");

// Liste des mati√®res avec emojis et couleurs associ√©s
const subjects = [
  { label: "Web", value: "Web", emoji: "üåê", color: "#1f8b4c" }, // Vert
  { label: "R√©seau", value: "R√©seau", emoji: "üì°", color: "#3498db" }, // Bleu
  { label: "JAVA", value: "JAVA", emoji: "‚òï", color: "#e67e22" }, // Orange
  {
    label: "Communication",
    value: "Communication",
    emoji: "üí¨",
    color: "#9b59b6",
  }, // Violet
  { label: "Anglais", value: "Anglais", emoji: "üá¨üáß", color: "#2980b9" }, // Bleu Fonc√©
  { label: "SQL", value: "SQL", emoji: "üíæ", color: "#f1c40f" }, // Jaune
];

module.exports = {
  name: "devoirs",
  description: "Affiche tous les devoirs ajout√©s",
  async execute(message) {
    // R√©cup√©rer la liste des devoirs
    const homeworkList = getHomeworkList();

    // V√©rifier si la liste est vide
    if (homeworkList.length === 0) {
      return message.channel.send(
        "Aucun devoir n'a √©t√© ajout√© pour le moment."
      );
    }

    // Afficher chaque devoir
    for (const homework of homeworkList) {
      const subjectInfo = subjects.find((s) => s.value === homework.subject);

      const embed = new EmbedBuilder()
        .setColor(subjectInfo ? subjectInfo.color : "#ffffff")
        .setTitle(`${subjectInfo ? subjectInfo.emoji : ""} ${homework.title}`)
        .setDescription(homework.description)
        .addFields(
          { name: "Mati√®re", value: homework.subject, inline: true },
          { name: "Date de rendu", value: homework.dueDate, inline: true }
        )
        .setFooter({ text: `Devoir ID: ${homework.id}` });

      // Envoyer l'embed en premier
      await message.channel.send({ embeds: [embed] });

      // Si un fichier est associ√© au devoir, joindre le fichier apr√®s l'embed
      if (homework.file) {
        const filePath = path.join(__dirname, "..", homework.file);

        if (fs.existsSync(filePath)) {
          const attachment = new AttachmentBuilder(filePath);
          await message.channel.send({ files: [attachment] });
        } else {
          await message.channel.send("Fichier introuvable.");
        }
      }
    }
  },
};
